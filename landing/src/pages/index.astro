---
import BaseLayout from '../layouts/BaseLayout.astro';
import Navigation from '../components/Navigation.astro';
import HeroPremium from '../components/HeroPremium.astro';
import ValuePropsPremium from '../components/ValuePropsPremium.astro';
import Features from '../components/Features.astro';
import CostCalculatorPremium from '../components/CostCalculatorPremium';
import Installation from '../components/Installation.astro';
import ComingSoon from '../components/ComingSoon.astro';
import FAQ from '../components/FAQ.astro';
import FinalCTA from '../components/FinalCTA.astro';
import Footer from '../components/Footer.astro';
import Dither from '../components/Dither';
import type { Language } from '../i18n/translations';

// For static GitHub Pages deployment, render English at this route.
// Client-side script will handle redirect to /ja/ when appropriate.
const lang: Language = 'en';

const title = lang === 'ja' 
  ? 'SkyPilot - 無料 OSS Sora 2 TUI/CLI/GUI BYOK | オープンソース動画生成ツール'
  : 'SkyPilot - Free OSS Sora 2 TUI/CLI/GUI BYOK | Open Source Video Generation Tool';

const description = lang === 'ja'
  ? '無料オープンソース Sora 2 TUI・CLI・GUI（BYOK）。OpenAI Sora 2 動画 API を自分のAPIキーで安全に利用。完全ローカル実行、サーバーコスト不要、最高のプライバシー。'
  : 'Free open-source Sora 2 TUI, CLI & GUI with BYOK (Bring Your Own Key). Secure OpenAI Sora 2 video API client. Runs entirely on your machine—no server costs, maximum privacy.';
---

<BaseLayout title={title} description={description} lang={lang}>
  <!-- <Dither 
    client:load 
    waveColor={[0.7, 0.7, 0.7]}
    disableAnimation={false}
    enableMouseInteraction={false}
    mouseRadius={0.3}
    colorNum={7}
    waveAmplitude={0.3}
    waveFrequency={3}
    waveSpeed={0.05}
  /> -->
  <Navigation lang={lang} />
  <HeroPremium lang={lang} />
  <ValuePropsPremium lang={lang} />
  <Features lang={lang} />
  
  <section class="section-container backdrop-premium">
    <CostCalculatorPremium client:load lang={lang} />
  </section>
  
  <Installation lang={lang} />
  <ComingSoon lang={lang} />
  <FAQ lang={lang} />
  <FinalCTA lang={lang} />
  <Footer lang={lang} />
  
  <!-- Language detection and route-based switching for static GitHub Pages -->
  <script is:inline>
    (function() {
      try {
        const getBasePath = () => {
          const segments = window.location.pathname.split('/').filter(Boolean);
          return segments.length ? `/${segments[0]}/` : '/';
        };
        const base = getBasePath();
        const stored = localStorage.getItem('preferred-language');
        // Always store current route language as EN when on base route
        localStorage.setItem('preferred-language', 'en');
        if (stored === 'ja') {
          // Respect existing preference and navigate to JA route
          const target = base + 'ja/';
          if (!window.location.pathname.endsWith('/ja/') && !window.location.pathname.includes('/ja/index.html')) {
            window.location.replace(target);
            return;
          }
        } else if (!stored) {
          // First visit: detect and redirect to JA if browser language is Japanese
          const browserLang = navigator.language.toLowerCase();
          const detectedLang = browserLang.startsWith('ja') ? 'ja' : 'en';
          localStorage.setItem('preferred-language', detectedLang);
          if (detectedLang === 'ja') {
            window.location.replace(base + 'ja/');
            return;
          }
        }
      } catch (e) {
        // noop
      }
    })();
  </script>
</BaseLayout>

