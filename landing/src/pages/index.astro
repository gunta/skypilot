---
import BaseLayout from '../layouts/BaseLayout.astro';
import Navigation from '../components/Navigation.astro';
import Hero from '../components/Hero.astro';
import ValueProps from '../components/ValueProps.astro';
import Features from '../components/Features.astro';
import CostCalculator from '../components/CostCalculator';
import Installation from '../components/Installation.astro';
import ComingSoon from '../components/ComingSoon.astro';
import FAQ from '../components/FAQ.astro';
import FinalCTA from '../components/FinalCTA.astro';
import Footer from '../components/Footer.astro';
import { detectLanguage, type Language } from '../i18n/translations';

// Detect language from URL query param or browser
const url = new URL(Astro.request.url);
const langParam = url.searchParams.get('lang') as Language | null;

// Fallback to English if lang param is invalid
let lang: Language = 'en';
if (langParam === 'ja' || langParam === 'en') {
  lang = langParam;
} else if (Astro.request.headers.get('accept-language')) {
  const acceptLang = Astro.request.headers.get('accept-language') || '';
  if (acceptLang.toLowerCase().includes('ja')) {
    lang = 'ja';
  }
}

const title = lang === 'ja' 
  ? 'Sky Pilot - 安全な Sora 2 CLI & ダッシュボード | オープンソース動画生成ツール'
  : 'Sky Pilot - Secure Sora 2 CLI & Dashboard | Open Source Video Generation Tool';

const description = lang === 'ja'
  ? '無料でオープンソースの OpenAI Sora 2 動画 API 用 CLI と TUI。完全にあなたのマシン上で実行—サーバーコスト不要、最高のプライバシー。150 以上の通貨でコストを追跡。'
  : 'Free, open-source CLI and TUI for OpenAI\'s Sora 2 video API. Runs entirely on your machine—no server costs, maximum privacy. Track costs in 150+ currencies.';
---

<BaseLayout title={title} description={description} lang={lang}>
  <Navigation lang={lang} />
  <Hero lang={lang} />
  <ValueProps lang={lang} />
  <Features lang={lang} />
  
  <section class="section-container bg-bg-secondary">
    <CostCalculator client:load lang={lang} />
  </section>
  
  <Installation lang={lang} />
  <ComingSoon lang={lang} />
  <FAQ lang={lang} />
  <FinalCTA lang={lang} />
  <Footer lang={lang} />
  
  <!-- Language detection script -->
  <script>
    // Store user's language preference
    const urlParams = new URLSearchParams(window.location.search);
    const langParam = urlParams.get('lang');
    
    if (!langParam) {
      // Auto-detect language
      const browserLang = navigator.language.toLowerCase();
      const preferredLang = localStorage.getItem('preferred-language');
      
      if (preferredLang) {
        // Use stored preference
        if (window.location.search !== `?lang=${preferredLang}`) {
          window.location.href = `?lang=${preferredLang}`;
        }
      } else if (browserLang.startsWith('ja')) {
        // Auto-redirect to Japanese
        window.location.href = '?lang=ja';
      } else {
        // Default to English
        localStorage.setItem('preferred-language', 'en');
      }
    } else {
      // Store the language preference
      localStorage.setItem('preferred-language', langParam);
    }
  </script>
</BaseLayout>

