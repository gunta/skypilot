---
import { getTranslation, type Language } from '../i18n/translations';

interface Props {
  lang: Language;
}

const { lang } = Astro.props;

const t = (key: any) => getTranslation(lang, key);
---

<section class="relative min-h-screen flex items-center justify-center overflow-hidden animated-gradient">
  <!-- Background decorative elements -->
  <div class="absolute inset-0 overflow-hidden">
    <div class="absolute -top-1/2 -right-1/2 w-96 h-96 bg-accent-primary opacity-10 rounded-full blur-3xl animate-float"></div>
    <div class="absolute -bottom-1/2 -left-1/2 w-96 h-96 bg-accent-secondary opacity-10 rounded-full blur-3xl animate-float" style="animation-delay: 2s;"></div>
  </div>

  <div class="section-container relative z-10">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      <!-- Left column: Text content -->
      <div class="text-center lg:text-left space-y-6">
        <h1 class="text-5xl sm:text-6xl lg:text-7xl font-bold leading-tight">
          {t('hero.title')}
        </h1>
        
        <p class="text-xl sm:text-2xl text-text-secondary max-w-2xl mx-auto lg:mx-0">
          {t('hero.subtitle')}
        </p>
        
        <div class="flex flex-wrap gap-3 justify-center lg:justify-start text-sm">
          <span class="px-3 py-1 bg-success/20 text-success rounded-full border border-success/30">
            ✓ {t('hero.badge1')}
          </span>
          <span class="px-3 py-1 bg-success/20 text-success rounded-full border border-success/30">
            ✓ {t('hero.badge2')}
          </span>
          <span class="px-3 py-1 bg-success/20 text-success rounded-full border border-success/30">
            ✓ {t('hero.badge3')}
          </span>
        </div>
        
        <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start pt-4">
          <button
            id="copy-npx"
            class="btn-primary inline-flex items-center justify-center space-x-2"
          >
            <span>{t('hero.cta.try')}</span>
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
            </svg>
          </button>
          
          <a
            href="https://github.com/gunta/skypilot"
            target="_blank"
            rel="noopener noreferrer"
            class="btn-secondary inline-flex items-center justify-center space-x-2"
          >
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd" />
            </svg>
            <span>{t('hero.cta.github')}</span>
          </a>
        </div>
      </div>
      
      <!-- Right column: Terminal animation -->
      <div class="card bg-code-bg/50 backdrop-blur-sm">
        <div class="flex items-center space-x-2 mb-4 pb-3 border-b border-border-color">
          <div class="flex space-x-2">
            <div class="w-3 h-3 rounded-full bg-red-500"></div>
            <div class="w-3 h-3 rounded-full bg-yellow-500"></div>
            <div class="w-3 h-3 rounded-full bg-green-500"></div>
          </div>
          <span class="text-xs text-text-muted font-mono">terminal</span>
        </div>
        
        <div class="font-mono text-sm space-y-2">
          <div class="flex items-start">
            <span class="text-accent-primary mr-2">$</span>
            <span class="text-text-primary">npx sky-pilot</span>
          </div>
          <div class="text-text-secondary pl-4">
            <div class="animate-pulse">Initializing Sky Pilot...</div>
          </div>
          <div class="text-success pl-4 mt-4">
            ✓ Ready! Run 'sky-pilot --help' to get started
          </div>
          
          <div class="mt-6 pt-6 border-t border-border-color">
            <div class="flex items-start">
              <span class="text-accent-primary mr-2">$</span>
              <span class="text-text-primary">sky-pilot create --prompt "A serene lake"</span>
            </div>
            <div class="text-text-secondary pl-4 mt-2">
              <div>Creating video with Sora 2...</div>
              <div class="mt-1">Progress: <span class="text-accent-primary">████████░░</span> 80%</div>
              <div class="mt-1 text-text-muted">Estimated cost: $0.24 USD</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  const copyButton = document.getElementById('copy-npx');
  if (copyButton) {
    copyButton.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText('npx sky-pilot');
        const originalText = copyButton.textContent;
        copyButton.textContent = '✓ Copied!';
        setTimeout(() => {
          if (copyButton.textContent === '✓ Copied!') {
            copyButton.textContent = originalText;
          }
        }, 2000);
      } catch (err) {
        console.error('Failed to copy:', err);
      }
    });
  }
</script>

