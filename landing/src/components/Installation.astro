---
import { getTranslation, type Language } from '../i18n/translations';

interface Props {
  lang: Language;
}

const { lang } = Astro.props;

const t = (key: any) => getTranslation(lang, key);

const commands = [
  {
    comment: t('install.comment1'),
    code: 'npx skypilot create --prompt "A serene lake at sunrise"',
  },
  {
    comment: t('install.comment2'),
    code: 'npm install -g skypilot',
  },
  {
    comment: t('install.comment3'),
    code: 'skypilot',
  },
  {
    comment: t('install.comment4'),
    code: 'skypilot download <video-id>',
  },
];
---

<section id="install" class="section-container bg-bg-secondary/80 backdrop-blur-sm">
  <div class="max-w-4xl mx-auto">
    <div class="text-center mb-12">
      <h2 class="text-4xl sm:text-5xl font-bold mb-4">
        {t('install.title')}
      </h2>
      <p class="text-xl text-text-secondary">
        {t('install.subtitle')}
      </p>
    </div>
    
    <div class="space-y-6">
      {commands.map((cmd, index) => (
        <div class="card bg-code-bg/50 backdrop-blur-sm">
          <div class="flex items-start justify-between gap-4">
            <div class="flex-1">
              <p class="text-sm text-text-muted mb-2"># {cmd.comment}</p>
              <code class="text-accent-primary font-mono text-sm break-all">
                $ {cmd.code}
              </code>
            </div>
            <button
              class="copy-btn flex-shrink-0 px-3 py-1.5 bg-bg-card border border-custom-border rounded-md text-sm text-text-secondary hover:text-accent-primary hover:border-accent-primary transition-all"
              data-copy={cmd.code}
            >
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
              </svg>
            </button>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  const copyButtons = document.querySelectorAll('.copy-btn');
  const copiedText = document.documentElement.lang === 'ja' ? 'コピーしました！' : 'Copied!';
  
  copyButtons.forEach(button => {
    button.addEventListener('click', async () => {
      const code = button.getAttribute('data-copy');
      if (code) {
        try {
          await navigator.clipboard.writeText(code);
          const originalHTML = button.innerHTML;
          button.innerHTML = `<span class="text-success">✓</span>`;
          setTimeout(() => {
            button.innerHTML = originalHTML;
          }, 2000);
        } catch (err) {
          console.error('Failed to copy:', err);
        }
      }
    });
  });
</script>

